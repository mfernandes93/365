using System;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Threading.Tasks;
using Microsoft.Identity.Client;

public class GraphConnectorMSAL
{
    // Configurações do Azure AD (substitua pelos seus valores)
    private static readonly string tenantId = "seu_tenant_id"; // pode ser o nome do domínio ou o ID do tenant
    private static readonly string clientId = "seu_client_id";
    private static readonly string clientSecret = "seu_client_secret";
    
    // Escopo para o Microsoft Graph. O ".default" indica que as permissões configuradas no portal serão utilizadas.
    private static readonly string[] scopes = new string[] { "https://graph.microsoft.com/.default" };

    /// <summary>
    /// Método para adquirir o token de acesso utilizando MSAL.
    /// </summary>
    public async Task<string> ObterTokenDeAcessoAsync()
    {
        // Cria a instância do aplicativo confidencial com as configurações do Azure AD
        IConfidentialClientApplication app = ConfidentialClientApplicationBuilder.Create(clientId)
            .WithClientSecret(clientSecret)
            .WithAuthority($"https://login.microsoftonline.com/{tenantId}")
            .Build();

        // Adquire o token para o recurso do Microsoft Graph
        AuthenticationResult result = await app.AcquireTokenForClient(scopes).ExecuteAsync();

        return result.AccessToken;
    }

    /// <summary>
    /// Exemplo de método para chamar a API do Microsoft Graph usando o token obtido.
    /// </summary>
    public async Task ChamarGraphApiAsync()
    {
        // Obtém o token de acesso
        string accessToken = await ObterTokenDeAcessoAsync();

        // Configura o HttpClient com o cabeçalho de autorização
        using (HttpClient client = new HttpClient())
        {
            client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", accessToken);
            
            // Exemplo: chamada à API para obter a lista de usuários
            HttpResponseMessage response = await client.GetAsync("https://graph.microsoft.com/v1.0/users");
            if (response.IsSuccessStatusCode)
            {
                string conteudo = await response.Content.ReadAsStringAsync();
                Console.WriteLine("Resposta da API Graph: " + conteudo);
            }
            else
            {
                Console.WriteLine("Erro ao chamar a API: " + response.StatusCode);
            }
        }
    }
}
