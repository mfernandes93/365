O erro indica que h√° um problema ao tentar decodificar o conte√∫do Base64 de um dos arquivos PEM, como o certificado (certificado.pem) ou a chave privada (chave.pem). Esse problema geralmente ocorre devido a:

Formato incorreto do arquivo PEM:

O conte√∫do do arquivo PEM pode ter caracteres inesperados, como espa√ßos em branco extras, quebras de linha incorretas ou caracteres que n√£o s√£o v√°lidos para Base64.
Delimitadores incorretos (-----BEGIN ...----- e -----END ...-----):

Certifique-se de que o arquivo possui os delimitadores corretos.
üîß Solu√ß√µes para o Problema
1. Verificar o Formato do Arquivo PEM
Certifique-se de que o conte√∫do do arquivo certificado.pem ou chave.pem segue o formato correto.

Exemplo do Formato Correto:

Certificado (certificado.pem):

css
Copiar
Editar
-----BEGIN CERTIFICATE-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA...
[conte√∫do codificado em Base64]
-----END CERTIFICATE-----
Chave Privada (chave.pem):

vbnet
Copiar
Editar
-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQ...
[conte√∫do codificado em Base64]
-----END PRIVATE KEY-----
2. Remover Quebras de Linha ou Caracteres Extras
Certifique-se de que o conte√∫do Base64 n√£o cont√©m:

Espa√ßos em branco extras no in√≠cio ou no fim.
Quebras de linha n√£o necess√°rias.
Voc√™ pode limpar o arquivo manualmente ou usar c√≥digo para fazer isso:

csharp
Copiar
Editar
private static string CleanPemContent(string pemContent)
{
    return pemContent
        .Replace("-----BEGIN CERTIFICATE-----", "")
        .Replace("-----END CERTIFICATE-----", "")
        .Replace("-----BEGIN PRIVATE KEY-----", "")
        .Replace("-----END PRIVATE KEY-----", "")
        .Replace("\n", "")
        .Replace("\r", "")
        .Trim();
}
Substitua o trecho no c√≥digo original por isso:

csharp
Copiar
Editar
var certPem = CleanPemContent(File.ReadAllText(certPath));
var keyPem = CleanPemContent(File.ReadAllText(keyPath));
3. Testar Decodifica√ß√£o do Conte√∫do Base64
Adicione um c√≥digo para testar a decodifica√ß√£o do Base64 antes de us√°-lo no certificado:

csharp
Copiar
Editar
private static byte[] DecodeBase64(string base64String)
{
    try
    {
        return Convert.FromBase64String(base64String);
    }
    catch (FormatException ex)
    {
        throw new Exception("O conte√∫do PEM cont√©m caracteres inv√°lidos ou n√£o est√° em Base64.", ex);
    }
}
No m√©todo LoadCertificateWithPrivateKey, substitua a decodifica√ß√£o de Base64:

csharp
Copiar
Editar
var certBytes = DecodeBase64(certPem);
var keyBytes = DecodeBase64(keyPem);
4. Validar os Arquivos PEM
Se ainda houver problemas, use uma ferramenta como OpenSSL para verificar os arquivos:

Verificar Certificado:

bash
Copiar
Editar
openssl x509 -in certificado.pem -text -noout
Verificar Chave Privada:

bash
Copiar
Editar
openssl rsa -in chave.pem -check
Se os arquivos forem v√°lidos, o OpenSSL exibir√° as informa√ß√µes do certificado/chave. Caso contr√°rio, ele indicar√° o erro.
