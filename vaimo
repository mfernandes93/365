using System;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Threading.Tasks;
using Microsoft.Identity.Client;
using Microsoft.Graph;

namespace GraphApiConsoleApp
{
    // Provedor de autenticação customizado que injeta o token na requisição
    public class CustomAuthenticationProvider : IAuthenticationProvider
    {
        private readonly string _accessToken;
        public CustomAuthenticationProvider(string accessToken)
        {
            _accessToken = accessToken;
        }

        public Task AuthenticateRequestAsync(HttpRequestMessage request)
        {
            request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", _accessToken);
            return Task.CompletedTask;
        }
    }

    class Program
    {
        // Configure com os valores do seu aplicativo registrado no Azure AD
        private const string clientId = "SEU_CLIENT_ID";
        private const string tenantId = "SEU_TENANT_ID"; // pode ser "common" ou o ID do seu tenant
        private static readonly string[] scopes = new string[] { "User.Read" };

        static async Task Main(string[] args)
        {
            // Cria a aplicação pública MSAL
            var app = PublicClientApplicationBuilder.Create(clientId)
                .WithAuthority(AzureCloudInstance.AzurePublic, tenantId)
                .WithDefaultRedirectUri()
                .Build();

            // Executa o fluxo device code para obter o token
            var authResult = await app.AcquireTokenWithDeviceCode(scopes, deviceCodeResult =>
            {
                Console.WriteLine(deviceCodeResult.Message);
                return Task.CompletedTask;
            }).ExecuteAsync();

            // Cria o cliente do Graph utilizando o provedor de autenticação customizado
            var graphClient = new GraphServiceClient(new CustomAuthenticationProvider(authResult.AccessToken));

            // Chamada para obter as informações do usuário logado (na v5, use GetAsync() diretamente)
            var me = await graphClient.Me.GetAsync();
            Console.WriteLine($"Nome: {me.DisplayName}");
        }
    }
}
